
// Instrumentation Header
{
    var fs = require('fs');
    var __statement_ufbMtQ, __expression_soT9SA, __block_ht8hnq;
    var store = require('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/contrib/coverage_store.js');
    
    __statement_ufbMtQ = function(i) {
        var fd = store.register('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map/lib/source-map/base64.js');
        fs.writeSync(fd, '{"statement": {"node": ' + i + '}},\n');
    }; 
    
    __expression_soT9SA = function(i) {
        var fd = store.register('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map/lib/source-map/base64.js');
        fs.writeSync(fd, '{"expression": {"node": ' + i + '}},\n');
    }; 
    
    __block_ht8hnq = function(i) {
        var fd = store.register('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map/lib/source-map/base64.js');
        fs.writeSync(fd, '{"block": ' + i + '},\n');
    }; 
    __intro_Ihvrsb = function(id, obj) {
        // console.log('__intro: ', id, ', obj.__instrumented_miss: ', obj.__instrumented_miss, ', obj.length: ', obj.length);
        (typeof obj === 'object' || typeof obj === 'function') &&
            Object.defineProperty && Object.defineProperty(obj, '__instrumented_miss', {enumerable: false, writable: true});
        obj.__instrumented_miss = obj.__instrumented_miss || [];
        if ('undefined' !== typeof obj && null !== obj && 'undefined' !== typeof obj.__instrumented_miss) {
            if (obj.length === 0) {
                // console.log('interim miss: ', id);
                obj.__instrumented_miss[id] = true;
            } else {
                obj.__instrumented_miss[id] = false;
            }
        }
        return obj;
    };
    function isProbablyChainable(obj, id) {
        return obj &&
            obj.__instrumented_miss[id] !== undefined &&
            'number' === typeof obj.length;
    }
    __extro_kwAjNf = function(id, obj) {
        var fd = store.register('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map/lib/source-map/base64.js');
        // console.log('__extro: ', id, ', obj.__instrumented_miss: ', obj.__instrumented_miss, ', obj.length: ', obj.length);
        if ('undefined' !== typeof obj && null !== obj && 'undefined' !== typeof obj.__instrumented_miss) {
            if (isProbablyChainable(obj, id) && obj.length === 0 && obj.__instrumented_miss[id]) {
                // if the call was not a "constructor" - i.e. it did not add things to the chainable
                // and it did not return anything from the chainable, it is a miss
                // console.log('miss: ', id);
            } else {
                fs.writeSync(fd, '{"chain": {"node": ' + id + '}},\n');
            }
            obj.__instrumented_miss[id] = undefined;
        } else {
            fs.writeSync(fd, '{"chain": {"node": ' + id + '}},\n');
        }
        return obj;
    };
};
////////////////////////

// Instrumented Code
if (__expression_soT9SA(0), (__expression_soT9SA(1), typeof define) !== 'function') {
    __block_ht8hnq(0);
    {
        __statement_ufbMtQ(2);
        var define = (__expression_soT9SA(3), (__expression_soT9SA(4), require('amdefine'))(module, require));
    }
}
{
    __statement_ufbMtQ(5);
    __expression_soT9SA(6), define(function (require, exports, module) {
        __block_ht8hnq(1);
        {
            __statement_ufbMtQ(7);
            var charToIntMap = {};
        }
        {
            __statement_ufbMtQ(8);
            var intToCharMap = {};
        }
        {
            __statement_ufbMtQ(9);
            __extro_kwAjNf(10, __intro_Ihvrsb(10, __extro_kwAjNf(11, __intro_Ihvrsb(11, 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/').split(''))).forEach(function (ch, index) {
                __block_ht8hnq(2);
                {
                    __statement_ufbMtQ(12);
                    charToIntMap[ch] = index;
                }
                {
                    __statement_ufbMtQ(13);
                    intToCharMap[index] = ch;
                }
            }));
        }
        {
            __statement_ufbMtQ(14);
            exports.encode = function base64_encode(aNumber) {
                __block_ht8hnq(3);
                if (__expression_soT9SA(15), ((__expression_soT9SA(16), aNumber) in (__expression_soT9SA(17), intToCharMap))) {
                    __block_ht8hnq(4);
                    return __expression_soT9SA(18), intToCharMap[aNumber];
                }
                {
                    __statement_ufbMtQ(19);
                    throw new TypeError((__expression_soT9SA(20), 'Must be between 0 and 63: ' + (__expression_soT9SA(21), aNumber)));
                }
            };
        }
        {
            __statement_ufbMtQ(22);
            exports.decode = function base64_decode(aChar) {
                __block_ht8hnq(5);
                if (__expression_soT9SA(23), ((__expression_soT9SA(24), aChar) in (__expression_soT9SA(25), charToIntMap))) {
                    __block_ht8hnq(6);
                    return __expression_soT9SA(26), charToIntMap[aChar];
                }
                {
                    __statement_ufbMtQ(27);
                    throw new TypeError((__expression_soT9SA(28), 'Not a valid base 64 digit: ' + (__expression_soT9SA(29), aChar)));
                }
            };
        }
    });
}