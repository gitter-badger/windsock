
// Instrumentation Header
{
    var fs = require('fs');
    var __statement_mg3rKO, __expression_oXWBpD, __block_muRHe_;
    var store = require('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/contrib/coverage_store.js');
    
    __statement_mg3rKO = function(i) {
        var fd = store.register('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/node_modules/jade/lib/nodes/tag.js');
        fs.writeSync(fd, '{"statement": {"node": ' + i + '}},\n');
    }; 
    
    __expression_oXWBpD = function(i) {
        var fd = store.register('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/node_modules/jade/lib/nodes/tag.js');
        fs.writeSync(fd, '{"expression": {"node": ' + i + '}},\n');
    }; 
    
    __block_muRHe_ = function(i) {
        var fd = store.register('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/node_modules/jade/lib/nodes/tag.js');
        fs.writeSync(fd, '{"block": ' + i + '},\n');
    }; 
    __intro_LOXzvN = function(id, obj) {
        // console.log('__intro: ', id, ', obj.__instrumented_miss: ', obj.__instrumented_miss, ', obj.length: ', obj.length);
        (typeof obj === 'object' || typeof obj === 'function') &&
            Object.defineProperty && Object.defineProperty(obj, '__instrumented_miss', {enumerable: false, writable: true});
        obj.__instrumented_miss = obj.__instrumented_miss || [];
        if ('undefined' !== typeof obj && null !== obj && 'undefined' !== typeof obj.__instrumented_miss) {
            if (obj.length === 0) {
                // console.log('interim miss: ', id);
                obj.__instrumented_miss[id] = true;
            } else {
                obj.__instrumented_miss[id] = false;
            }
        }
        return obj;
    };
    function isProbablyChainable(obj, id) {
        return obj &&
            obj.__instrumented_miss[id] !== undefined &&
            'number' === typeof obj.length;
    }
    __extro_iyanzT = function(id, obj) {
        var fd = store.register('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/node_modules/jade/lib/nodes/tag.js');
        // console.log('__extro: ', id, ', obj.__instrumented_miss: ', obj.__instrumented_miss, ', obj.length: ', obj.length);
        if ('undefined' !== typeof obj && null !== obj && 'undefined' !== typeof obj.__instrumented_miss) {
            if (isProbablyChainable(obj, id) && obj.length === 0 && obj.__instrumented_miss[id]) {
                // if the call was not a "constructor" - i.e. it did not add things to the chainable
                // and it did not return anything from the chainable, it is a miss
                // console.log('miss: ', id);
            } else {
                fs.writeSync(fd, '{"chain": {"node": ' + id + '}},\n');
            }
            obj.__instrumented_miss[id] = undefined;
        } else {
            fs.writeSync(fd, '{"chain": {"node": ' + id + '}},\n');
        }
        return obj;
    };
};
////////////////////////

// Instrumented Code
{
    __statement_mg3rKO(0);
    'use strict';
}
{
    __statement_mg3rKO(1);
    var Attrs = (__expression_oXWBpD(2), require('./attrs'));
}
{
    __statement_mg3rKO(3);
    var Block = (__expression_oXWBpD(4), require('./block'));
}
{
    __statement_mg3rKO(5);
    var inlineTags = (__expression_oXWBpD(6), require('../inline-tags'));
}
{
    __statement_mg3rKO(7);
    var Tag = module.exports = function Tag(name, block) {
            __block_muRHe_(0);
            {
                __statement_mg3rKO(8);
                this.name = name;
            }
            {
                __statement_mg3rKO(9);
                this.attrs = [];
            }
            {
                __statement_mg3rKO(10);
                this.attributeBlocks = [];
            }
            {
                __statement_mg3rKO(11);
                this.block = (__expression_oXWBpD(12), (__expression_oXWBpD(13), block) || new Block());
            }
        };
}
{
    __statement_mg3rKO(14);
    Tag.prototype = __extro_iyanzT(15, __intro_LOXzvN(15, Object).create(Attrs.prototype));
}
{
    __statement_mg3rKO(16);
    Tag.prototype.constructor = Tag;
}
{
    __statement_mg3rKO(17);
    Tag.prototype.type = 'Tag';
}
{
    __statement_mg3rKO(18);
    Tag.prototype.clone = function () {
        __block_muRHe_(1);
        {
            __statement_mg3rKO(19);
            var clone = new Tag(this.name, __extro_iyanzT(20, __intro_LOXzvN(20, this.block).clone()));
        }
        {
            __statement_mg3rKO(21);
            clone.line = this.line;
        }
        {
            __statement_mg3rKO(22);
            clone.attrs = this.attrs;
        }
        {
            __statement_mg3rKO(23);
            clone.textOnly = this.textOnly;
        }
        return __expression_oXWBpD(24), clone;
    };
}
{
    __statement_mg3rKO(25);
    Tag.prototype.isInline = function () {
        __block_muRHe_(2);
        return __expression_oXWBpD(26), (__expression_oXWBpD(27), ~__extro_iyanzT(28, __intro_LOXzvN(28, inlineTags).indexOf(this.name)));
    };
}
{
    __statement_mg3rKO(29);
    Tag.prototype.canInline = function () {
        __block_muRHe_(3);
        {
            __statement_mg3rKO(30);
            var nodes = this.block.nodes;
        }
        function isInline(node) {
            __block_muRHe_(4);
            if (node.isBlock) {
                __block_muRHe_(5);
                return __expression_oXWBpD(31), __extro_iyanzT(32, __intro_LOXzvN(32, node.nodes).every(isInline));
            }
            return __expression_oXWBpD(33), (__expression_oXWBpD(34), node.isText || (__expression_oXWBpD(35), node.isInline && __extro_iyanzT(36, __intro_LOXzvN(36, node).isInline())));
        }
        if (__expression_oXWBpD(37), !nodes.length) {
            __block_muRHe_(6);
            return __expression_oXWBpD(38), true;
        }
        if (__expression_oXWBpD(39), 1 == nodes.length) {
            __block_muRHe_(7);
            return __expression_oXWBpD(40), (__expression_oXWBpD(41), isInline(nodes[0]));
        }
        if (__extro_iyanzT(42, __intro_LOXzvN(42, this.block.nodes).every(isInline))) {
            __block_muRHe_(8);
            for (var i = 1, len = nodes.length; __expression_oXWBpD(43), (__expression_oXWBpD(44), i) < (__expression_oXWBpD(45), len); __expression_oXWBpD(46), ++i) {
                __block_muRHe_(9);
                if (__expression_oXWBpD(47), nodes[__expression_oXWBpD(48), (__expression_oXWBpD(49), i) - 1].isText && nodes[i].isText) {
                    __block_muRHe_(10);
                    return __expression_oXWBpD(50), false;
                }
            }
            return __expression_oXWBpD(51), true;
        }
        return __expression_oXWBpD(52), false;
    };
}