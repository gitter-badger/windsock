
// Instrumentation Header
{
    var fs = require('fs');
    var __statement_x$PrW6, __expression_dIwE9D, __block_lZUgjn;
    var store = require('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/contrib/coverage_store.js');
    
    __statement_x$PrW6 = function(i) {
        var fd = store.register('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map/lib/source-map/base64-vlq.js');
        fs.writeSync(fd, '{"statement": {"node": ' + i + '}},\n');
    }; 
    
    __expression_dIwE9D = function(i) {
        var fd = store.register('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map/lib/source-map/base64-vlq.js');
        fs.writeSync(fd, '{"expression": {"node": ' + i + '}},\n');
    }; 
    
    __block_lZUgjn = function(i) {
        var fd = store.register('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map/lib/source-map/base64-vlq.js');
        fs.writeSync(fd, '{"block": ' + i + '},\n');
    }; 
    __intro_hdAVRx = function(id, obj) {
        // console.log('__intro: ', id, ', obj.__instrumented_miss: ', obj.__instrumented_miss, ', obj.length: ', obj.length);
        (typeof obj === 'object' || typeof obj === 'function') &&
            Object.defineProperty && Object.defineProperty(obj, '__instrumented_miss', {enumerable: false, writable: true});
        obj.__instrumented_miss = obj.__instrumented_miss || [];
        if ('undefined' !== typeof obj && null !== obj && 'undefined' !== typeof obj.__instrumented_miss) {
            if (obj.length === 0) {
                // console.log('interim miss: ', id);
                obj.__instrumented_miss[id] = true;
            } else {
                obj.__instrumented_miss[id] = false;
            }
        }
        return obj;
    };
    function isProbablyChainable(obj, id) {
        return obj &&
            obj.__instrumented_miss[id] !== undefined &&
            'number' === typeof obj.length;
    }
    __extro_gyKOBb = function(id, obj) {
        var fd = store.register('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/node_modules/jade/node_modules/with/node_modules/uglify-js/node_modules/source-map/lib/source-map/base64-vlq.js');
        // console.log('__extro: ', id, ', obj.__instrumented_miss: ', obj.__instrumented_miss, ', obj.length: ', obj.length);
        if ('undefined' !== typeof obj && null !== obj && 'undefined' !== typeof obj.__instrumented_miss) {
            if (isProbablyChainable(obj, id) && obj.length === 0 && obj.__instrumented_miss[id]) {
                // if the call was not a "constructor" - i.e. it did not add things to the chainable
                // and it did not return anything from the chainable, it is a miss
                // console.log('miss: ', id);
            } else {
                fs.writeSync(fd, '{"chain": {"node": ' + id + '}},\n');
            }
            obj.__instrumented_miss[id] = undefined;
        } else {
            fs.writeSync(fd, '{"chain": {"node": ' + id + '}},\n');
        }
        return obj;
    };
};
////////////////////////

// Instrumented Code
if (__expression_dIwE9D(0), (__expression_dIwE9D(1), typeof define) !== 'function') {
    __block_lZUgjn(0);
    {
        __statement_x$PrW6(2);
        var define = (__expression_dIwE9D(3), (__expression_dIwE9D(4), require('amdefine'))(module, require));
    }
}
{
    __statement_x$PrW6(5);
    __expression_dIwE9D(6), define(function (require, exports, module) {
        __block_lZUgjn(1);
        {
            __statement_x$PrW6(7);
            var base64 = (__expression_dIwE9D(8), require('./base64'));
        }
        {
            __statement_x$PrW6(9);
            var VLQ_BASE_SHIFT = 5;
        }
        {
            __statement_x$PrW6(10);
            var VLQ_BASE = (__expression_dIwE9D(11), 1 << (__expression_dIwE9D(12), VLQ_BASE_SHIFT));
        }
        {
            __statement_x$PrW6(13);
            var VLQ_BASE_MASK = (__expression_dIwE9D(14), (__expression_dIwE9D(15), VLQ_BASE) - 1);
        }
        {
            __statement_x$PrW6(16);
            var VLQ_CONTINUATION_BIT = VLQ_BASE;
        }
        function toVLQSigned(aValue) {
            __block_lZUgjn(2);
            return __expression_dIwE9D(17), (__expression_dIwE9D(20), (__expression_dIwE9D(21), aValue) < 0) ? (__expression_dIwE9D(18), (__expression_dIwE9D(22), (__expression_dIwE9D(23), (__expression_dIwE9D(24), -(__expression_dIwE9D(25), aValue)) << 1) + 1)) : (__expression_dIwE9D(19), (__expression_dIwE9D(26), (__expression_dIwE9D(27), (__expression_dIwE9D(28), aValue) << 1) + 0));
        }
        function fromVLQSigned(aValue) {
            __block_lZUgjn(3);
            {
                __statement_x$PrW6(29);
                var isNegative = (__expression_dIwE9D(30), (__expression_dIwE9D(31), (__expression_dIwE9D(32), aValue) & 1) === 1);
            }
            {
                __statement_x$PrW6(33);
                var shifted = (__expression_dIwE9D(34), (__expression_dIwE9D(35), aValue) >> 1);
            }
            return __expression_dIwE9D(36), (__expression_dIwE9D(39), isNegative) ? (__expression_dIwE9D(37), (__expression_dIwE9D(40), -(__expression_dIwE9D(41), shifted))) : (__expression_dIwE9D(38), shifted);
        }
        {
            __statement_x$PrW6(42);
            exports.encode = function base64VLQ_encode(aValue) {
                __block_lZUgjn(4);
                {
                    __statement_x$PrW6(43);
                    var encoded = '';
                }
                {
                    __statement_x$PrW6(44);
                    var digit;
                }
                {
                    __statement_x$PrW6(45);
                    var vlq = (__expression_dIwE9D(46), toVLQSigned(aValue));
                }
                do {
                    __block_lZUgjn(5);
                    {
                        __statement_x$PrW6(47);
                        digit = (__expression_dIwE9D(48), (__expression_dIwE9D(49), vlq) & (__expression_dIwE9D(50), VLQ_BASE_MASK));
                    }
                    {
                        __statement_x$PrW6(51);
                        vlq >>>= VLQ_BASE_SHIFT;
                    }
                    if (__expression_dIwE9D(52), (__expression_dIwE9D(53), vlq) > 0) {
                        __block_lZUgjn(6);
                        {
                            __statement_x$PrW6(54);
                            digit |= VLQ_CONTINUATION_BIT;
                        }
                    }
                    {
                        __statement_x$PrW6(55);
                        encoded += __extro_gyKOBb(56, __intro_hdAVRx(56, base64).encode(digit));
                    }
                } while (__expression_dIwE9D(57), (__expression_dIwE9D(58), vlq) > 0);
                return __expression_dIwE9D(59), encoded;
            };
        }
        {
            __statement_x$PrW6(60);
            exports.decode = function base64VLQ_decode(aStr, aOutParam) {
                __block_lZUgjn(7);
                {
                    __statement_x$PrW6(61);
                    var i = 0;
                }
                {
                    __statement_x$PrW6(62);
                    var strLen = aStr.length;
                }
                {
                    __statement_x$PrW6(63);
                    var result = 0;
                }
                {
                    __statement_x$PrW6(64);
                    var shift = 0;
                }
                {
                    __statement_x$PrW6(65);
                    var continuation, digit;
                }
                do {
                    __block_lZUgjn(8);
                    if (__expression_dIwE9D(66), (__expression_dIwE9D(67), i) >= (__expression_dIwE9D(68), strLen)) {
                        __block_lZUgjn(9);
                        {
                            __statement_x$PrW6(69);
                            throw new Error('Expected more digits in base 64 VLQ value.');
                        }
                    }
                    {
                        __statement_x$PrW6(70);
                        digit = __extro_gyKOBb(71, __intro_hdAVRx(71, base64).decode(__extro_gyKOBb(72, __intro_hdAVRx(72, aStr).charAt((__expression_dIwE9D(73), i++)))));
                    }
                    {
                        __statement_x$PrW6(74);
                        continuation = (__expression_dIwE9D(75), !(__expression_dIwE9D(76), !(__expression_dIwE9D(77), (__expression_dIwE9D(78), digit) & (__expression_dIwE9D(79), VLQ_CONTINUATION_BIT))));
                    }
                    {
                        __statement_x$PrW6(80);
                        digit &= VLQ_BASE_MASK;
                    }
                    {
                        __statement_x$PrW6(81);
                        result = (__expression_dIwE9D(82), (__expression_dIwE9D(83), result) + (__expression_dIwE9D(84), (__expression_dIwE9D(85), digit) << (__expression_dIwE9D(86), shift)));
                    }
                    {
                        __statement_x$PrW6(87);
                        shift += VLQ_BASE_SHIFT;
                    }
                } while (__expression_dIwE9D(88), continuation);
                {
                    __statement_x$PrW6(89);
                    aOutParam.value = (__expression_dIwE9D(90), fromVLQSigned(result));
                }
                {
                    __statement_x$PrW6(91);
                    aOutParam.rest = __extro_gyKOBb(92, __intro_hdAVRx(92, aStr).slice(i));
                }
            };
        }
    });
}