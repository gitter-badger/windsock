
// Instrumentation Header
{
    var fs = require('fs');
    var __statement_LLX4Op, __expression_$mD4TJ, __block_q$qkjY;
    var store = require('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/contrib/coverage_store.js');
    
    __statement_LLX4Op = function(i) {
        var fd = store.register('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/node_modules/jade/lib/nodes/attrs.js');
        fs.writeSync(fd, '{"statement": {"node": ' + i + '}},\n');
    }; 
    
    __expression_$mD4TJ = function(i) {
        var fd = store.register('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/node_modules/jade/lib/nodes/attrs.js');
        fs.writeSync(fd, '{"expression": {"node": ' + i + '}},\n');
    }; 
    
    __block_q$qkjY = function(i) {
        var fd = store.register('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/node_modules/jade/lib/nodes/attrs.js');
        fs.writeSync(fd, '{"block": ' + i + '},\n');
    }; 
    __intro_pNFHOL = function(id, obj) {
        // console.log('__intro: ', id, ', obj.__instrumented_miss: ', obj.__instrumented_miss, ', obj.length: ', obj.length);
        (typeof obj === 'object' || typeof obj === 'function') &&
            Object.defineProperty && Object.defineProperty(obj, '__instrumented_miss', {enumerable: false, writable: true});
        obj.__instrumented_miss = obj.__instrumented_miss || [];
        if ('undefined' !== typeof obj && null !== obj && 'undefined' !== typeof obj.__instrumented_miss) {
            if (obj.length === 0) {
                // console.log('interim miss: ', id);
                obj.__instrumented_miss[id] = true;
            } else {
                obj.__instrumented_miss[id] = false;
            }
        }
        return obj;
    };
    function isProbablyChainable(obj, id) {
        return obj &&
            obj.__instrumented_miss[id] !== undefined &&
            'number' === typeof obj.length;
    }
    __extro_rlOuf7 = function(id, obj) {
        var fd = store.register('/Users/bensawyer/projects/sandbox/windsock/node_modules/gulp-coverage/node_modules/jade/lib/nodes/attrs.js');
        // console.log('__extro: ', id, ', obj.__instrumented_miss: ', obj.__instrumented_miss, ', obj.length: ', obj.length);
        if ('undefined' !== typeof obj && null !== obj && 'undefined' !== typeof obj.__instrumented_miss) {
            if (isProbablyChainable(obj, id) && obj.length === 0 && obj.__instrumented_miss[id]) {
                // if the call was not a "constructor" - i.e. it did not add things to the chainable
                // and it did not return anything from the chainable, it is a miss
                // console.log('miss: ', id);
            } else {
                fs.writeSync(fd, '{"chain": {"node": ' + id + '}},\n');
            }
            obj.__instrumented_miss[id] = undefined;
        } else {
            fs.writeSync(fd, '{"chain": {"node": ' + id + '}},\n');
        }
        return obj;
    };
};
////////////////////////

// Instrumented Code
{
    __statement_LLX4Op(0);
    'use strict';
}
{
    __statement_LLX4Op(1);
    var Node = (__expression_$mD4TJ(2), require('./node'));
}
{
    __statement_LLX4Op(3);
    var Block = (__expression_$mD4TJ(4), require('./block'));
}
{
    __statement_LLX4Op(5);
    var Attrs = module.exports = function Attrs() {
            __block_q$qkjY(0);
            {
                __statement_LLX4Op(6);
                this.attributeNames = [];
            }
            {
                __statement_LLX4Op(7);
                this.attrs = [];
            }
            {
                __statement_LLX4Op(8);
                this.attributeBlocks = [];
            }
        };
}
{
    __statement_LLX4Op(9);
    Attrs.prototype = __extro_rlOuf7(10, __intro_pNFHOL(10, Object).create(Node.prototype));
}
{
    __statement_LLX4Op(11);
    Attrs.prototype.constructor = Attrs;
}
{
    __statement_LLX4Op(12);
    Attrs.prototype.type = 'Attrs';
}
{
    __statement_LLX4Op(13);
    Attrs.prototype.setAttribute = function (name, val, escaped) {
        __block_q$qkjY(1);
        {
            __statement_LLX4Op(14);
            this.attributeNames = (__expression_$mD4TJ(15), this.attributeNames || []);
        }
        if (__expression_$mD4TJ(16), (__expression_$mD4TJ(17), (__expression_$mD4TJ(18), name) !== 'class') && (__expression_$mD4TJ(19), __extro_rlOuf7(20, __intro_pNFHOL(20, this.attributeNames).indexOf(name)) !== (__expression_$mD4TJ(21), -1))) {
            __block_q$qkjY(2);
            {
                __statement_LLX4Op(22);
                throw new Error((__expression_$mD4TJ(23), (__expression_$mD4TJ(24), 'Duplicate attribute "' + (__expression_$mD4TJ(25), name)) + '" is not allowed.'));
            }
        }
        {
            __statement_LLX4Op(26);
            __extro_rlOuf7(27, __intro_pNFHOL(27, this.attributeNames).push(name));
        }
        {
            __statement_LLX4Op(28);
            __extro_rlOuf7(29, __intro_pNFHOL(29, this.attrs).push({
                name: name,
                val: val,
                escaped: escaped
            }));
        }
        return __expression_$mD4TJ(30), this;
    };
}
{
    __statement_LLX4Op(31);
    Attrs.prototype.removeAttribute = function (name) {
        __block_q$qkjY(3);
        for (var i = 0, len = this.attrs.length; __expression_$mD4TJ(32), (__expression_$mD4TJ(33), i) < (__expression_$mD4TJ(34), len); __expression_$mD4TJ(35), ++i) {
            __block_q$qkjY(4);
            if (__expression_$mD4TJ(36), this.attrs[i] && (__expression_$mD4TJ(37), this.attrs[i].name == (__expression_$mD4TJ(38), name))) {
                __block_q$qkjY(5);
                {
                    __statement_LLX4Op(39);
                    __expression_$mD4TJ(40), delete this.attrs[i];
                }
            }
        }
    };
}
{
    __statement_LLX4Op(41);
    Attrs.prototype.getAttribute = function (name) {
        __block_q$qkjY(6);
        for (var i = 0, len = this.attrs.length; __expression_$mD4TJ(42), (__expression_$mD4TJ(43), i) < (__expression_$mD4TJ(44), len); __expression_$mD4TJ(45), ++i) {
            __block_q$qkjY(7);
            if (__expression_$mD4TJ(46), this.attrs[i] && (__expression_$mD4TJ(47), this.attrs[i].name == (__expression_$mD4TJ(48), name))) {
                __block_q$qkjY(8);
                return __expression_$mD4TJ(49), this.attrs[i].val;
            }
        }
    };
}
{
    __statement_LLX4Op(50);
    Attrs.prototype.addAttributes = function (src) {
        __block_q$qkjY(9);
        {
            __statement_LLX4Op(51);
            __extro_rlOuf7(52, __intro_pNFHOL(52, this.attributeBlocks).push(src));
        }
    };
}